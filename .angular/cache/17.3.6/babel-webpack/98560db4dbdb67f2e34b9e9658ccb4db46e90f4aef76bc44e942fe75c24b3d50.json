{"ast":null,"code":"import { signal } from '@angular/core';\nimport { repeat } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let CounterComponent = /*#__PURE__*/(() => {\n  class CounterComponent {\n    constructor() {\n      // CICLO DE VIDA DE COMPONENTES\n      this.duration = 0;\n      this.message = '';\n      this.counter = signal(0);\n      // NO ASYNC\n      // BEFORE RENDER\n      // CORRE UNA VEZ\n      console.log('constructor');\n      console.log('-', repeat(5));\n    }\n    ngOnChanges(changes) {\n      // BEFORE AND DURING RENDER\n      console.log('ngOnChanges');\n      console.log('-', repeat(5));\n      console.log(changes);\n      const duration = changes['duration'];\n      console.log(duration);\n      if (duration && duration.currentValue !== duration.previousValue) {\n        this.doSomething();\n      }\n    }\n    ngOnInit() {\n      // AFTER RENDER\n      // CORRE UNA VEZ\n      // ASYNC, PROMESA\n      console.log('ngOnInit');\n      console.log('-', repeat(5));\n      console.log('Duration =>', this.duration);\n      console.log('Message =>', this.message);\n      this.couterRef = window.setInterval(() => {\n        console.log('Run interval');\n        this.counter.update(statePrev => statePrev + 1);\n      }, 1000);\n    }\n    ngAfterViewInit() {\n      // AFTER RENDER\n      // HIJOS YA FUERON RENDERIZADOS\n      console.log('ngAfterViewInit');\n      console.log('-', repeat(5));\n    }\n    ngOnDestroy() {\n      // REVISA CUANDO EL COMPONENTE SE DESTRUYE\n      console.log('ngOnDestroy');\n      console.log('-', repeat(5));\n      window.clearInterval(this.couterRef);\n    }\n    doSomething() {\n      // ASYNC\n      console.log('Change Duration');\n    }\n    static #_ = this.ɵfac = function CounterComponent_Factory(t) {\n      return new (t || CounterComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CounterComponent,\n      selectors: [[\"app-counter\"]],\n      inputs: {\n        duration: \"duration\",\n        message: \"message\"\n      },\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 1,\n      template: function CounterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"span\");\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate(ctx.counter());\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3VudGVyLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZG9tYWlucy9zaGFyZWQvY29tcG9uZW50cy9jb3VudGVyL2NvdW50ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0tBQW9LIiwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n  return CounterComponent;\n})();","map":{"version":3,"names":["signal","repeat","CounterComponent","constructor","duration","message","counter","console","log","ngOnChanges","changes","currentValue","previousValue","doSomething","ngOnInit","couterRef","window","setInterval","update","statePrev","ngAfterViewInit","ngOnDestroy","clearInterval","_","_2","selectors","inputs","standalone","features","i0","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","template","CounterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate"],"sources":["C:\\Users\\Yerson\\Documents\\Cursos\\Platzi\\Angular\\Store\\src\\app\\domains\\shared\\components\\counter\\counter.component.ts","C:\\Users\\Yerson\\Documents\\Cursos\\Platzi\\Angular\\Store\\src\\app\\domains\\shared\\components\\counter\\counter.component.html"],"sourcesContent":["import { Component, Input, SimpleChanges, signal } from '@angular/core';\r\nimport { repeat } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-counter',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './counter.component.html',\r\n  styleUrl: './counter.component.css'\r\n})\r\n\r\nexport class CounterComponent {\r\n  // CICLO DE VIDA DE COMPONENTES\r\n  @Input({required: true}) duration = 0;\r\n  @Input({required: true}) message = '';\r\n\r\n  counter = signal(0);\r\n  couterRef: number | undefined;\r\n\r\n  constructor() {\r\n    // NO ASYNC\r\n    // BEFORE RENDER\r\n    // CORRE UNA VEZ\r\n    console.log('constructor')\r\n    console.log('-', repeat(5))\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // BEFORE AND DURING RENDER\r\n    console.log('ngOnChanges')\r\n    console.log('-', repeat(5))\r\n    console.log(changes)\r\n    const duration = changes['duration']\r\n    console.log(duration)\r\n    if (duration && duration.currentValue !== duration.previousValue) {\r\n      this.doSomething()\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // AFTER RENDER\r\n    // CORRE UNA VEZ\r\n    // ASYNC, PROMESA\r\n    console.log('ngOnInit')\r\n    console.log('-', repeat(5))\r\n    console.log('Duration =>', this.duration)\r\n    console.log('Message =>', this.message)\r\n\r\n    this.couterRef = window.setInterval(() => {\r\n      console.log('Run interval')\r\n      this.counter.update(statePrev => statePrev + 1)\r\n    }, 1000)\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // AFTER RENDER\r\n    // HIJOS YA FUERON RENDERIZADOS\r\n    console.log('ngAfterViewInit')\r\n    console.log('-', repeat(5))\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // REVISA CUANDO EL COMPONENTE SE DESTRUYE\r\n    console.log('ngOnDestroy')\r\n    console.log('-', repeat(5))\r\n    window.clearInterval(this.couterRef)   \r\n  }\r\n\r\n  doSomething() {\r\n    // ASYNC\r\n    console.log('Change Duration')\r\n  }\r\n\r\n}\r\n","<span>{{ counter() }}</span>"],"mappings":"AAAA,SAA0CA,MAAM,QAAQ,eAAe;AACvE,SAASC,MAAM,QAAQ,MAAM;;AAW7B,WAAaC,gBAAgB;EAAvB,MAAOA,gBAAgB;IAQ3BC,YAAA;MAPA;MACyB,KAAAC,QAAQ,GAAG,CAAC;MACZ,KAAAC,OAAO,GAAG,EAAE;MAErC,KAAAC,OAAO,GAAGN,MAAM,CAAC,CAAC,CAAC;MAIjB;MACA;MACA;MACAO,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1BD,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEP,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7B;IAEAQ,WAAWA,CAACC,OAAsB;MAChC;MACAH,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1BD,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEP,MAAM,CAAC,CAAC,CAAC,CAAC;MAC3BM,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC;MACpB,MAAMN,QAAQ,GAAGM,OAAO,CAAC,UAAU,CAAC;MACpCH,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACrB,IAAIA,QAAQ,IAAIA,QAAQ,CAACO,YAAY,KAAKP,QAAQ,CAACQ,aAAa,EAAE;QAChE,IAAI,CAACC,WAAW,EAAE;MACpB;IACF;IAEAC,QAAQA,CAAA;MACN;MACA;MACA;MACAP,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvBD,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEP,MAAM,CAAC,CAAC,CAAC,CAAC;MAC3BM,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,IAAI,CAACJ,QAAQ,CAAC;MACzCG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACH,OAAO,CAAC;MAEvC,IAAI,CAACU,SAAS,GAAGC,MAAM,CAACC,WAAW,CAAC,MAAK;QACvCV,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3B,IAAI,CAACF,OAAO,CAACY,MAAM,CAACC,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;MACjD,CAAC,EAAE,IAAI,CAAC;IACV;IAEAC,eAAeA,CAAA;MACb;MACA;MACAb,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9BD,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEP,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7B;IAEAoB,WAAWA,CAAA;MACT;MACAd,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1BD,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEP,MAAM,CAAC,CAAC,CAAC,CAAC;MAC3Be,MAAM,CAACM,aAAa,CAAC,IAAI,CAACP,SAAS,CAAC;IACtC;IAEAF,WAAWA,CAAA;MACT;MACAN,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAChC;IAAC,QAAAe,CAAA,G;uBA5DUrB,gBAAgB;IAAA;IAAA,QAAAsB,EAAA,G;YAAhBtB,gBAAgB;MAAAuB,SAAA;MAAAC,MAAA;QAAAtB,QAAA;QAAAC,OAAA;MAAA;MAAAsB,UAAA;MAAAC,QAAA,GAAAC,EAAA,CAAAC,oBAAA,EAAAD,EAAA,CAAAE,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCZ7BP,EAAA,CAAAS,cAAA,WAAM;UAAAT,EAAA,CAAAU,MAAA,GAAe;UAAAV,EAAA,CAAAW,YAAA,EAAO;;;UAAtBX,EAAA,CAAAY,SAAA,EAAe;UAAfZ,EAAA,CAAAa,iBAAA,CAAAL,GAAA,CAAA/B,OAAA,GAAe;;;;;;SDYRJ,gBAAgB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}