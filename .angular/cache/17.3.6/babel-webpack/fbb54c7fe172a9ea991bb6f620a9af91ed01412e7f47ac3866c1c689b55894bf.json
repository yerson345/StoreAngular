{"ast":null,"code":"import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport let Subject = /*#__PURE__*/(() => {\n  class Subject extends Observable {\n    constructor() {\n      super();\n      this.closed = false;\n      this.currentObservers = null;\n      this.observers = [];\n      this.isStopped = false;\n      this.hasError = false;\n      this.thrownError = null;\n    }\n    lift(operator) {\n      const subject = new AnonymousSubject(this, this);\n      subject.operator = operator;\n      return subject;\n    }\n    _throwIfClosed() {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      }\n    }\n    next(value) {\n      errorContext(() => {\n        this._throwIfClosed();\n        if (!this.isStopped) {\n          if (!this.currentObservers) {\n            this.currentObservers = Array.from(this.observers);\n          }\n          for (const observer of this.currentObservers) {\n            observer.next(value);\n          }\n        }\n      });\n    }\n    error(err) {\n      errorContext(() => {\n        this._throwIfClosed();\n        if (!this.isStopped) {\n          this.hasError = this.isStopped = true;\n          this.thrownError = err;\n          const {\n            observers\n          } = this;\n          while (observers.length) {\n            observers.shift().error(err);\n          }\n        }\n      });\n    }\n    complete() {\n      errorContext(() => {\n        this._throwIfClosed();\n        if (!this.isStopped) {\n          this.isStopped = true;\n          const {\n            observers\n          } = this;\n          while (observers.length) {\n            observers.shift().complete();\n          }\n        }\n      });\n    }\n    unsubscribe() {\n      this.isStopped = this.closed = true;\n      this.observers = this.currentObservers = null;\n    }\n    get observed() {\n      var _a;\n      return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n      this._throwIfClosed();\n      return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n      this._throwIfClosed();\n      this._checkFinalizedStatuses(subscriber);\n      return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n      const {\n        hasError,\n        isStopped,\n        observers\n      } = this;\n      if (hasError || isStopped) {\n        return EMPTY_SUBSCRIPTION;\n      }\n      this.currentObservers = null;\n      observers.push(subscriber);\n      return new Subscription(() => {\n        this.currentObservers = null;\n        arrRemove(observers, subscriber);\n      });\n    }\n    _checkFinalizedStatuses(subscriber) {\n      const {\n        hasError,\n        thrownError,\n        isStopped\n      } = this;\n      if (hasError) {\n        subscriber.error(thrownError);\n      } else if (isStopped) {\n        subscriber.complete();\n      }\n    }\n    asObservable() {\n      const observable = new Observable();\n      observable.source = this;\n      return observable;\n    }\n  }\n  Subject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n  };\n  return Subject;\n})();\nexport class AnonymousSubject extends Subject {\n  constructor(destination, source) {\n    super();\n    this.destination = destination;\n    this.source = source;\n  }\n  next(value) {\n    var _a, _b;\n    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n  }\n  error(err) {\n    var _a, _b;\n    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n  }\n  complete() {\n    var _a, _b;\n    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n  }\n  _subscribe(subscriber) {\n    var _a, _b;\n    return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n  }\n}","map":{"version":3,"names":["Observable","Subscription","EMPTY_SUBSCRIPTION","ObjectUnsubscribedError","arrRemove","errorContext","Subject","constructor","closed","currentObservers","observers","isStopped","hasError","thrownError","lift","operator","subject","AnonymousSubject","_throwIfClosed","next","value","Array","from","observer","error","err","length","shift","complete","unsubscribe","observed","_a","_trySubscribe","subscriber","_subscribe","_checkFinalizedStatuses","_innerSubscribe","push","asObservable","observable","source","create","destination","_b","call","subscribe"],"sources":["C:/Users/Yerson/Documents/Cursos/Platzi/Angular/Store/node_modules/rxjs/dist/esm/internal/Subject.js"],"sourcesContent":["import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.currentObservers = null;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                if (!this.currentObservers) {\n                    this.currentObservers = Array.from(this.observers);\n                }\n                for (const observer of this.currentObservers) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(() => {\n            this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,cAAc;AACzC,SAASC,YAAY,EAAEC,kBAAkB,QAAQ,gBAAgB;AACjE,SAASC,uBAAuB,QAAQ,gCAAgC;AACxE,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,YAAY,QAAQ,qBAAqB;AAClD,WAAaC,OAAO;EAAb,MAAMA,OAAO,SAASN,UAAU,CAAC;IACpCO,WAAWA,CAAA,EAAG;MACV,KAAK,CAAC,CAAC;MACP,IAAI,CAACC,MAAM,GAAG,KAAK;MACnB,IAAI,CAACC,gBAAgB,GAAG,IAAI;MAC5B,IAAI,CAACC,SAAS,GAAG,EAAE;MACnB,IAAI,CAACC,SAAS,GAAG,KAAK;MACtB,IAAI,CAACC,QAAQ,GAAG,KAAK;MACrB,IAAI,CAACC,WAAW,GAAG,IAAI;IAC3B;IACAC,IAAIA,CAACC,QAAQ,EAAE;MACX,MAAMC,OAAO,GAAG,IAAIC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC;MAChDD,OAAO,CAACD,QAAQ,GAAGA,QAAQ;MAC3B,OAAOC,OAAO;IAClB;IACAE,cAAcA,CAAA,EAAG;MACb,IAAI,IAAI,CAACV,MAAM,EAAE;QACb,MAAM,IAAIL,uBAAuB,CAAC,CAAC;MACvC;IACJ;IACAgB,IAAIA,CAACC,KAAK,EAAE;MACRf,YAAY,CAAC,MAAM;QACf,IAAI,CAACa,cAAc,CAAC,CAAC;QACrB,IAAI,CAAC,IAAI,CAACP,SAAS,EAAE;UACjB,IAAI,CAAC,IAAI,CAACF,gBAAgB,EAAE;YACxB,IAAI,CAACA,gBAAgB,GAAGY,KAAK,CAACC,IAAI,CAAC,IAAI,CAACZ,SAAS,CAAC;UACtD;UACA,KAAK,MAAMa,QAAQ,IAAI,IAAI,CAACd,gBAAgB,EAAE;YAC1Cc,QAAQ,CAACJ,IAAI,CAACC,KAAK,CAAC;UACxB;QACJ;MACJ,CAAC,CAAC;IACN;IACAI,KAAKA,CAACC,GAAG,EAAE;MACPpB,YAAY,CAAC,MAAM;QACf,IAAI,CAACa,cAAc,CAAC,CAAC;QACrB,IAAI,CAAC,IAAI,CAACP,SAAS,EAAE;UACjB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACD,SAAS,GAAG,IAAI;UACrC,IAAI,CAACE,WAAW,GAAGY,GAAG;UACtB,MAAM;YAAEf;UAAU,CAAC,GAAG,IAAI;UAC1B,OAAOA,SAAS,CAACgB,MAAM,EAAE;YACrBhB,SAAS,CAACiB,KAAK,CAAC,CAAC,CAACH,KAAK,CAACC,GAAG,CAAC;UAChC;QACJ;MACJ,CAAC,CAAC;IACN;IACAG,QAAQA,CAAA,EAAG;MACPvB,YAAY,CAAC,MAAM;QACf,IAAI,CAACa,cAAc,CAAC,CAAC;QACrB,IAAI,CAAC,IAAI,CAACP,SAAS,EAAE;UACjB,IAAI,CAACA,SAAS,GAAG,IAAI;UACrB,MAAM;YAAED;UAAU,CAAC,GAAG,IAAI;UAC1B,OAAOA,SAAS,CAACgB,MAAM,EAAE;YACrBhB,SAAS,CAACiB,KAAK,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;UAChC;QACJ;MACJ,CAAC,CAAC;IACN;IACAC,WAAWA,CAAA,EAAG;MACV,IAAI,CAAClB,SAAS,GAAG,IAAI,CAACH,MAAM,GAAG,IAAI;MACnC,IAAI,CAACE,SAAS,GAAG,IAAI,CAACD,gBAAgB,GAAG,IAAI;IACjD;IACA,IAAIqB,QAAQA,CAAA,EAAG;MACX,IAAIC,EAAE;MACN,OAAO,CAAC,CAACA,EAAE,GAAG,IAAI,CAACrB,SAAS,MAAM,IAAI,IAAIqB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACL,MAAM,IAAI,CAAC;IACrF;IACAM,aAAaA,CAACC,UAAU,EAAE;MACtB,IAAI,CAACf,cAAc,CAAC,CAAC;MACrB,OAAO,KAAK,CAACc,aAAa,CAACC,UAAU,CAAC;IAC1C;IACAC,UAAUA,CAACD,UAAU,EAAE;MACnB,IAAI,CAACf,cAAc,CAAC,CAAC;MACrB,IAAI,CAACiB,uBAAuB,CAACF,UAAU,CAAC;MACxC,OAAO,IAAI,CAACG,eAAe,CAACH,UAAU,CAAC;IAC3C;IACAG,eAAeA,CAACH,UAAU,EAAE;MACxB,MAAM;QAAErB,QAAQ;QAAED,SAAS;QAAED;MAAU,CAAC,GAAG,IAAI;MAC/C,IAAIE,QAAQ,IAAID,SAAS,EAAE;QACvB,OAAOT,kBAAkB;MAC7B;MACA,IAAI,CAACO,gBAAgB,GAAG,IAAI;MAC5BC,SAAS,CAAC2B,IAAI,CAACJ,UAAU,CAAC;MAC1B,OAAO,IAAIhC,YAAY,CAAC,MAAM;QAC1B,IAAI,CAACQ,gBAAgB,GAAG,IAAI;QAC5BL,SAAS,CAACM,SAAS,EAAEuB,UAAU,CAAC;MACpC,CAAC,CAAC;IACN;IACAE,uBAAuBA,CAACF,UAAU,EAAE;MAChC,MAAM;QAAErB,QAAQ;QAAEC,WAAW;QAAEF;MAAU,CAAC,GAAG,IAAI;MACjD,IAAIC,QAAQ,EAAE;QACVqB,UAAU,CAACT,KAAK,CAACX,WAAW,CAAC;MACjC,CAAC,MACI,IAAIF,SAAS,EAAE;QAChBsB,UAAU,CAACL,QAAQ,CAAC,CAAC;MACzB;IACJ;IACAU,YAAYA,CAAA,EAAG;MACX,MAAMC,UAAU,GAAG,IAAIvC,UAAU,CAAC,CAAC;MACnCuC,UAAU,CAACC,MAAM,GAAG,IAAI;MACxB,OAAOD,UAAU;IACrB;EACJ;EACAjC,OAAO,CAACmC,MAAM,GAAG,CAACC,WAAW,EAAEF,MAAM,KAAK;IACtC,OAAO,IAAIvB,gBAAgB,CAACyB,WAAW,EAAEF,MAAM,CAAC;EACpD,CAAC;EAAC,OAxGWlC,OAAO;AAAA;AAyGpB,OAAO,MAAMW,gBAAgB,SAASX,OAAO,CAAC;EAC1CC,WAAWA,CAACmC,WAAW,EAAEF,MAAM,EAAE;IAC7B,KAAK,CAAC,CAAC;IACP,IAAI,CAACE,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACF,MAAM,GAAGA,MAAM;EACxB;EACArB,IAAIA,CAACC,KAAK,EAAE;IACR,IAAIW,EAAE,EAAEY,EAAE;IACV,CAACA,EAAE,GAAG,CAACZ,EAAE,GAAG,IAAI,CAACW,WAAW,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACZ,IAAI,MAAM,IAAI,IAAIwB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,IAAI,CAACb,EAAE,EAAEX,KAAK,CAAC;EACvI;EACAI,KAAKA,CAACC,GAAG,EAAE;IACP,IAAIM,EAAE,EAAEY,EAAE;IACV,CAACA,EAAE,GAAG,CAACZ,EAAE,GAAG,IAAI,CAACW,WAAW,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACP,KAAK,MAAM,IAAI,IAAImB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,IAAI,CAACb,EAAE,EAAEN,GAAG,CAAC;EACtI;EACAG,QAAQA,CAAA,EAAG;IACP,IAAIG,EAAE,EAAEY,EAAE;IACV,CAACA,EAAE,GAAG,CAACZ,EAAE,GAAG,IAAI,CAACW,WAAW,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACH,QAAQ,MAAM,IAAI,IAAIe,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,IAAI,CAACb,EAAE,CAAC;EACpI;EACAG,UAAUA,CAACD,UAAU,EAAE;IACnB,IAAIF,EAAE,EAAEY,EAAE;IACV,OAAO,CAACA,EAAE,GAAG,CAACZ,EAAE,GAAG,IAAI,CAACS,MAAM,MAAM,IAAI,IAAIT,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACc,SAAS,CAACZ,UAAU,CAAC,MAAM,IAAI,IAAIU,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGzC,kBAAkB;EACtJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}