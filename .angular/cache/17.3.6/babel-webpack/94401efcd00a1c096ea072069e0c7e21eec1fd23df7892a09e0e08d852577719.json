{"ast":null,"code":"import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nexport let Observable = /*#__PURE__*/(() => {\n  class Observable {\n    constructor(subscribe) {\n      if (subscribe) {\n        this._subscribe = subscribe;\n      }\n    }\n    lift(operator) {\n      const observable = new Observable();\n      observable.source = this;\n      observable.operator = operator;\n      return observable;\n    }\n    subscribe(observerOrNext, error, complete) {\n      const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n      errorContext(() => {\n        const {\n          operator,\n          source\n        } = this;\n        subscriber.add(operator ? operator.call(subscriber, source) : source ? this._subscribe(subscriber) : this._trySubscribe(subscriber));\n      });\n      return subscriber;\n    }\n    _trySubscribe(sink) {\n      try {\n        return this._subscribe(sink);\n      } catch (err) {\n        sink.error(err);\n      }\n    }\n    forEach(next, promiseCtor) {\n      promiseCtor = getPromiseCtor(promiseCtor);\n      return new promiseCtor((resolve, reject) => {\n        const subscriber = new SafeSubscriber({\n          next: value => {\n            try {\n              next(value);\n            } catch (err) {\n              reject(err);\n              subscriber.unsubscribe();\n            }\n          },\n          error: reject,\n          complete: resolve\n        });\n        this.subscribe(subscriber);\n      });\n    }\n    _subscribe(subscriber) {\n      var _a;\n      return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    }\n    [Symbol_observable]() {\n      return this;\n    }\n    pipe(...operations) {\n      return pipeFromArray(operations)(this);\n    }\n    toPromise(promiseCtor) {\n      promiseCtor = getPromiseCtor(promiseCtor);\n      return new promiseCtor((resolve, reject) => {\n        let value;\n        this.subscribe(x => value = x, err => reject(err), () => resolve(value));\n      });\n    }\n  }\n  Observable.create = subscribe => {\n    return new Observable(subscribe);\n  };\n  return Observable;\n})();\nfunction getPromiseCtor(promiseCtor) {\n  var _a;\n  return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n  return value && value instanceof Subscriber || isObserver(value) && isSubscription(value);\n}","map":{"version":3,"names":["SafeSubscriber","Subscriber","isSubscription","observable","Symbol_observable","pipeFromArray","config","isFunction","errorContext","Observable","constructor","subscribe","_subscribe","lift","operator","source","observerOrNext","error","complete","subscriber","isSubscriber","add","call","_trySubscribe","sink","err","forEach","next","promiseCtor","getPromiseCtor","resolve","reject","value","unsubscribe","_a","pipe","operations","toPromise","x","create","Promise","isObserver"],"sources":["C:/Users/Yerson/Documents/Cursos/Platzi/Angular/Store/node_modules/rxjs/dist/esm/internal/Observable.js"],"sourcesContent":["import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nexport class Observable {\n    constructor(subscribe) {\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    lift(operator) {\n        const observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    subscribe(observerOrNext, error, complete) {\n        const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        errorContext(() => {\n            const { operator, source } = this;\n            subscriber.add(operator\n                ?\n                    operator.call(subscriber, source)\n                : source\n                    ?\n                        this._subscribe(subscriber)\n                    :\n                        this._trySubscribe(subscriber));\n        });\n        return subscriber;\n    }\n    _trySubscribe(sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.error(err);\n        }\n    }\n    forEach(next, promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            const subscriber = new SafeSubscriber({\n                next: (value) => {\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscriber.unsubscribe();\n                    }\n                },\n                error: reject,\n                complete: resolve,\n            });\n            this.subscribe(subscriber);\n        });\n    }\n    _subscribe(subscriber) {\n        var _a;\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    }\n    [Symbol_observable]() {\n        return this;\n    }\n    pipe(...operations) {\n        return pipeFromArray(operations)(this);\n    }\n    toPromise(promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let value;\n            this.subscribe((x) => (value = x), (err) => reject(err), () => resolve(value));\n        });\n    }\n}\nObservable.create = (subscribe) => {\n    return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n    var _a;\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}